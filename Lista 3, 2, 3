#include<stdio.h>
#include<locale.h>
#include<stdlib.h>
int posicao(int **matriz, int n, int Posicao);
void mat_libera(int** mat, int n);
int main(void){
	
	int i, j, n;
	setlocale(LC_ALL, "Portuguese");
 	printf("Universidade Federal Rural do Semi-Árido\n ");
 	printf("Diciplina: PEX1243 \n");
 	printf("Aluna: Francisca Lorrayne");
 	printf("\n\n");
	printf("Digite as dimensões da matriz: ");
	scanf("%d", &n);
	
	int **matriz=(int**)(malloc(n*sizeof(int*)));
	for(i=0;i<n;i++){
		matriz[i]=(int*)malloc(n*sizeof(int));
	}
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			printf("Digite a posição da matriz: ");
			scanf("%d", &matriz[i][j]);
		}
	}
int r=posicao(matriz, n, 6);
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			printf("Resultado:%d \n", r);
	}
}
  mat_libera(matriz, n);
return 0;
}
void mat_libera(int** mat, int n){
  int i;
     for(i = 0; i < n; i++){
        free(mat[i]); // libera cada uma das linhas
     }
    free(mat);
}
int posicao(int **matriz, int n, int p){
	int i, j;
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			if(matriz[i][j]==p){
				return 1;
			}
		}
	}
	return 0;

}

QUESTÃO 3


#include <stdio.h>

int main(void) {
	int n, i, j;
	int mat[n][n];
	int soma_principal = 0, soma_secund = 0; // variavei de somas iniciadas em 0
	printf("Digite a quantidade da matriz: "); //pedir ao usuario para digitar a quantidade da matriz
	scanf("%i", &n);
	
	for (i = 0; i < n; i++) { //laço de repetição que recebe a quantidade por linha da matriz 
		for (j = 0; j < n; j++) { 
			printf("Digite as linhas da matriz:");
			scanf("%d", &mat[i][j]);
		}
	}
	for (i = 0; i < n; i++) { //laço de repetição que recebe a quantidade por coluna  da matriz 
		for (j = 0; j < n; j++) {
			printf("Digite as colunas da matriz: ");
			printf("%d ", mat[i][j]);
		}
	}
	//soma diagonal principal
	for (i = 0; i < n; i++) {
		soma_principal += mat[i][i];
	}	
	//soma diagonal secundária
	for (i = 0; i < n; i++) {
		soma_secund += mat[i][n-i-1];
	}
	//soma linhas
	printf("\nSoma das linhas: ");
	int vetL[n];
	for (i = 0; i < n; i++) {
		vetL[i] = 0;
		for (j = 0; j < n; j++) {
			vetL[i] += mat[i][j];
		}
	}
	for (i = 0; i < n; i++) {
		printf("%d ", vetL[i]); //exibição da quantidade de linhas
	}

	//soma colunas
	printf("\nSoma das colunas: "); 
	int vetC[n];
	for (j = 0; j < n; j++) {
		vetC[j] = 0;
		for (i = 0; i < n; i++) {
			vetC[j] += mat[i][j];
		}
	}
	for (i = 0; i < n; i++) {
		printf("%d ", vetC[i]); //exibição da quantidade de colunas
	}
	
	printf("\nSoma diagonal principal %d e secundária %d\n", soma_principal, soma_secund); //exibição da soma principal e secundaria

	int testaL = 1, testaC = 1; 
	for (i = 1; i <  n; i++) {
		if (vetL[i] != vetL[i-1]) { //testa se as linhas e colunas são iguais 
			testaL = 0;
			break;
		} else if (vetC[i] != vetC[i-1]) {
			testaC = 0;
			break;
		}
	}
	//testa se as linhas e colunas são iguais , caso seja 
	if (testaL && testaC && soma_principal == soma_secund && soma_principal == vetL[0]) { 
		printf("Quadrado magico"); // exibe que é magico
	} else {
		printf("Quadrado nao magico"); // exibe que não é magico
	}

	return 0;
}

